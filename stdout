Feature: POST create user # features/api_create_user.feature:1
  Validar criação de usuário e mensagem/corpo/contrato
  Background:   # features/api_create_user.feature:4

  @post @contract
  Scenario: Criar usuário com sucesso (201) e validar contrato                         # features/api_create_user.feature:8
    Given the API base url                                                             # features/steps/api_steps.py:10
    Given the request body                                                             # None
      """
      {
        "name": "morpheus",
        "job": "leader"
      }
      """
    When I send a POST request to "/api/users"                                         # None
    Then the response status code should be 201                                        # None
    And the json path "$.name" should equal "morpheus"                                 # None
    And the json path "$.job" should equal "leader"                                    # None
    And the response body should match schema "api_contracts/user_created.schema.json" # None
    And the json path "$.id" should not be empty                                       # None
    And the json path "$.createdAt" should not be empty                                # None

  @message @post
  Scenario: Mensagem/conteúdo esperado em campo      # features/api_create_user.feature:25
    Given the API base url                           # features/steps/api_steps.py:10
    Given the request body                           # None
      """
      {"name":"Neo","job":"The One"}
      """
    When I send a POST request to "/api/users"       # None
    Then the response status code should be 201      # None
    And the json path "$.name" should equal "Neo"    # None
    And the response should contain text "createdAt" # None

Feature: GET users - lista paginada # features/api_get_users.feature:1
  As a QA
  I want to fetch users
  So that I can validate status, headers, corpo e contrato
  Background:   # features/api_get_users.feature:6

  @smoke @get
  Scenario: Status 200, tempo e headers válidos                              # features/api_get_users.feature:10
    Given the API base url                                                   # features/steps/api_steps.py:10
    When I send a GET request to "/api/users?page=2"                         # features/steps/api_steps.py:19
    Then the response status code should be 200                              # features/steps/api_steps.py:24
    And the response time should be less than 1500 ms                        # features/steps/api_steps.py:30
    And the response header "Content-Type" should contain "application/json" # features/steps/api_steps.py:36

  @contract @get
  Scenario: Corpo segue o contrato (lista de usuários)                                # features/api_get_users.feature:17
    Given the API base url                                                            # features/steps/api_steps.py:10
    When I send a GET request to "/api/users?page=2"                                  # features/steps/api_steps.py:19
    Then the response body should match schema "api_contracts/users_list.schema.json" # features/steps/api_steps.py:71

  @body @get
  Scenario: Campos principais do corpo existem e têm tipos esperados  # features/api_get_users.feature:22
    Given the API base url                                            # features/steps/api_steps.py:10
    When I send a GET request to "/api/users?page=2"                  # features/steps/api_steps.py:19
    Then the json path "$.page" should be an integer                  # features/steps/api_steps.py:56
    And the json path "$.data" should be an array                     # features/steps/api_steps.py:61
    And the json path "$.data[0].email" should contain "@"            # features/steps/api_steps.py:66

Feature: Casos negativos # features/api_negative.feature:1
  Verificar mensagens, status e corpo em erros
  Background:   # features/api_negative.feature:4

  @negative @auth
  Scenario: Login sem senha retorna 400 e mensagem          # features/api_negative.feature:8
    Given the API base url                                  # features/steps/api_steps.py:10
    Given the request body                                  # None
      """
      {"email":"peter@klaven"}
      """
    When I send a POST request to "/api/login"              # None
    Then the response status code should be 400             # None
    And the response should contain text "Missing password" # None

